/* ezra.js | A front-end framework for rendering Bibles generated by Scribe. */
var request    = new XMLHttpRequest();
var path       = location.hash;
var literature = JSON.parse(require('./assets/js/shelf.json'));
var canon      = JSON.parse(require('./assets/js/canon.json'));
var bible      = literature.bibles;
var Primary    = literature.primary.split('/')[1];
var version    = path.split('/')[1];
var book       = path.split('/')[2];
var chapter    = path.split('/')[3];
var option     = 'location.hash=this.options[this.selectedIndex].value;';

function require(url) {
  'use strict';
  request.open('GET', url, false);
  request.send();
  if (request.status == 200) {
    return request.response;
  } else {
    return '';
  }
}

var ezra = {

  infiniteScroll: function() {
    'use strict';
    var lastDiv       = document.querySelector('#scroll > div:last-child');
    var lastDivOffset = lastDiv.offsetTop + lastDiv.clientHeight;
    var pageOffset    = window.pageYOffset + window.innerHeight;
    if (pageOffset > lastDivOffset - 30) {
      if (request.status !== 404) {
        chapter = parseInt(chapter) + 1;
        var nextChapter  = require('./bibles/' + version + '/' + book + '/' + chapter + '.html');
        var newDiv       = document.createElement('div');
        newDiv.className = 'chapter ' + chapter;
        newDiv.innerHTML = nextChapter;
        document.getElementById('scroll').appendChild(newDiv);
        ezra.infiniteScroll();
      }
    }
  },

  versionMenu: function() {
    'use strict';
    var vM_Builder = [];
    vM_Builder.push('<div class="menu"><select id="version" onchange="', option, '">');
    bible.forEach(function (Version) {
      if (version && !book) {
        vM_Builder.push('<option value="#/', Version, '">', Version, '</option>');
      }
      if (book && !chapter) {
        vM_Builder.push('<option value="#/', Version, '/', book, '">', Version, '</option>');
      }
      if (chapter) {
        vM_Builder.push('<option value="#/', Version, '/', book, '/', chapter, '">', Version, '</option>');
      }
    });
    vM_Builder.push('</select></div>');
    var vM = vM_Builder.join('');
    return vM;
  },

  bookMenu: function() {
    'use strict';
    var bM_Builder = [];
    bM_Builder.push('<div class="menu"><select id="book" onchange="', option, '">');
    bM_Builder.push(require('./bibles/' + version + '/menu.html'));
    bM_Builder.push('</select></div>');
    var bM = bM_Builder.join('');
    return bM;
  },

  navigation: function() {
    'use strict';
    if (version) {
      document.getElementById('navigation').innerHTML = ezra.versionMenu();
    }
    if (book) {
      document.getElementById('navigation').innerHTML = ezra.bookMenu() + ezra.versionMenu();
    }
  },

  app: function() {
    'use strict';
    var versionMenuID = document.getElementById('version');
    var bookMenuID    = document.getElementById('book');
    var appBuilder    = [];
    if (versionMenuID) { versionMenuID.value = path; }
    if (bookMenuID)    { bookMenuID.value = path; }
    /* home path */
    if (path === '' || path === '/') {
      appBuilder.push('<h4>Books of the Bible</h4>');
      appBuilder.push('<div class="row">');
      appBuilder.push('<div class="six columns"><h5>Old Testament</h5>');
      canon.OT.forEach(function (Book) {
        appBuilder.push('<a alt="', Book, '" href="#/', Primary, '/', Book.toLowerCase().replace(/\s/g, ''), '/1">', Book, '</a><br>');
      });
      appBuilder.push('</div>');
      appBuilder.push('<div class="six columns"><h5>New Testament</h5>');
      canon.NT.forEach(function (Book) {
        appBuilder.push('<a alt="', Book, '" href="#/', Primary, '/', Book.toLowerCase(), '/1">', Book, '</a><br>');
      });
      appBuilder.push('</div>');
      appBuilder.push('</div>');
    }
    /* version path */
    if (path === '#/' + version) {
      appBuilder.push('<div id="/', version, '"><div src="./bibles/', version, '/index.html"></div></div>');
    }
    /* book path */
    if (path === '#/' + version + '/' + book) {
      bookMenuID.value = path + '/1';
      var Book = book.charAt(0).toUpperCase() + book.slice(1);
      appBuilder.push('<h1>', Book, '</h1>');
      appBuilder.push('<div id="/', book, '"><div src="./bibles/', version, '/', book, '/index.html"></div></div>');
    }
    /* chapter path */
    if (path === '#/' + version + '/' + book + '/' + chapter) {
      bookMenuID.value = path.replace(chapter, '1');
      appBuilder.push('<div src="./bibles/', version, '/' + book, '/index.html"></div>');
      appBuilder.push('<div class="chapter ', chapter, '"><div src="./bibles/', version, '/', book, '/', chapter, '.html"></div></div>');
      document.addEventListener('scroll', function() {
        ezra.infiniteScroll();
      });
    }
    var serve = appBuilder.join('');
    document.getElementById('scroll').innerHTML = serve;
  },

  route: function() {
    'use strict';
    /* default path */
    if (/#*?\//.test(path) && !version) {
      location.hash = literature.primary;
    }
  },

  reload: function() {
    'use strict';
    location.reload();
  }

};

window.addEventListener('hashchange', ezra.reload, false);